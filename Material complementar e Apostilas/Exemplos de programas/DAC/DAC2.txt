/**
  ******************************************************************************
  * @file    main.c
  * @author  Ac6
  * @version V1.0
  * @date    01-December-2013
  * @brief   Default main function.
  ******************************************************************************
*/

#include "stm32f4xx.h"		//inclusão das definições do microcontrolador
#include <stdio.h>			//necessário para usar as funções printf e scanf
#include "Utility.h"


//array com amostras do sinal
const uint16_t samples[100]={
		2048, 2176, 2304, 2431, 2557, 2680, 2801, 2919, 3034, 3145,
		3251, 3353, 3449, 3540, 3625, 3704, 3776, 3842, 3900, 3951,
		3995, 4031, 4059, 4079, 4091, 4095, 4091, 4079, 4059, 4031,
		3995, 3951, 3900, 3842, 3776, 3704, 3625, 3540, 3449, 3353,
		3251, 3145, 3034, 2919, 2801, 2680, 2557, 2431, 2304, 2176,
		2048, 1919, 1791, 1664, 1538, 1415, 1294, 1176, 1061, 950,
		844, 742, 646, 555, 470, 391, 319, 253, 195, 144,
		100, 64, 36, 16, 4, 0, 4, 16, 36, 64,
		100, 144, 195, 253, 319, 391, 470, 555, 646, 742,
		844, 950, 1061, 1176, 1294, 1415, 1538, 1664, 1791, 1919};

//função principal
int main(void)
{
	Configure_Clock();			//configura o sistema de clock
	Delay_Start();				//inicializa funções de Delay

	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;	//habilita o clock do GPIOA
	GPIOA->MODER |= 0b11 << 8;				//inicialização do pino PA4 no modo analógico

	RCC->APB1ENR |= RCC_APB1ENR_DACEN;		//habilita o clock da interface digital do DAC

	DAC->CR |= DAC_CR_BOFF1;	//desabilita o buffer analógico do DAC1
	DAC->CR |= DAC_CR_EN1;		//habilita o canal 1 do DAC

	while(1)
	{
		for(uint8_t contador=0; contador<100; ++contador)
		{
			DAC->DHR12R1 = samples[contador];	//escreve no DAC1
			Delay_us(200);						//aguarda para a próxima amostra
		}
	}
}
