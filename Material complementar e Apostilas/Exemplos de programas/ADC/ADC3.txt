/**
  ******************************************************************************
  * @file    main.c
  * @author  Ac6
  * @version V1.0
  * @date    01-December-2013
  * @brief   Default main function.
  ******************************************************************************
*/

#include "stm32f4xx.h"		//inclusão das definições do microcontrolador
#include <stdio.h>			//necessário para usar as funções printf e scanf
#include "Setup_Fagner.h"


int main(void)
{
	Configure_Clock();			//configura o sistema de clock
	USART1_Init();				//inicializa a USART1
	Delay_Start();				//inicializa funções de Delay

	RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;		//liga o clock da interface digital do ADC1

	ADC->CCR |= 0b01 << 16;			//prescaler /4
	ADC1->SQR1 &= ~(0xF << 20);		//conversão de apenas um canal
	ADC1->SQR3 |= 16;				//seleção do canal a ser convertido (IN_16)
	ADC1->SMPR1 |= (7 << 18);		//tempo de amostragem igual a 480 ciclos de ADCCLK
	ADC->CCR |= ADC_CCR_TSVREFE;	//liga o sensor de temperatura
	ADC1->CR2 |= ADC_CR2_ADON;		//liga o conversor AD

	uint32_t *p = (uint32_t *) 0x1FFF7A2C;			//cria ponteiro para uma posição de memória
	uint32_t Word = p[0];							//lê o conteúdo da memória
	uint16_t TS_CAL1 = (Word & 0x0000FFFF);			//lê o valor de TS_CAL1
	uint16_t TS_CAL2 = (Word & 0xFFFF0000) >> 16;	//lê o valor de TS_CAL2

	while(1)
	{
		ADC1->CR2 |= ADC_CR2_SWSTART;					//inicia a conversão
		while(!(ADC1->SR & ADC_SR_EOC));				//aguarda o fim da conversão
		uint8_t temperatura = ((80*(ADC1->DR - TS_CAL1))/(TS_CAL2-TS_CAL1))+30; //calcula a temperatura
		printf("Temperatura = %d °C\n", temperatura);	//imprime o valor da temperatura no monitor
		Delay_ms(500);									//aguarda 500ms para fazer a nova leitura
	}
}
